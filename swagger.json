{
    "openapi": "3.0.0",
    "info": {
      "title": "API MagicBurger",
      "description": "API desenvolvida para aplicação web da hamburgueria MagicBurger.",
      "contact": {
        "email": "isisbeatrizrn@gmail.com",
        "url": "https://github.com/isisnoron"
      },
      "version": "1.0.0"
    },
    "host": "https://magic-burger-api.herokuapp.com/",
    "tags": [
      {
        "name": "Auth",
        "description": "Access to authentication"
      },
      {
        "name": "User",
        "description": "Operations about user"
      },
      {
        "name": "Product",
        "description": "Operations about products"
      },
      {
        "name": "Order",
        "description": "Access to all orders"
      }
    ],

    "schemes":["https","http"],
    "paths": {
     "/auth": {
       "post": {
         "summary": "Criação de token",
         "description": "",
         "tags":["Auth"],
         "parameters": [
           {
             "name": "User",
             "required": true,
             "in": "body",
             "schema": {
               "type": "object",
               "properties": {
                 "email": {
                   "type": "string"
                 },
                 "password": {
                   "type": "string"
                 }
               }
             }
           }
         ],
         "responses": {
          "400" : {
            "description": "Email ou senha inválidos",
               "schema": {
                 "$ref": "#/components/schemas/Error"
             }
           },
            "200" : {
              "description": "Token criado",
              "schema": {
               "$ref": "#/components/schemas/Auth"
           }
         }
         }
       }
     },
     "/user": {
       "get": {
         "summary": "Lista todos os usuários",
         "description": "Lista todos os colaboradores do restaurante registrados no sistema",
         "tags":["User"],
         "parameters": [
           {
            "in": "header",
             "name": "Authorization",
             "required": true,
             "description": "Auth Token",
             "type": "string"
             
           }
         ],
         "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
           "200" : {
             "description": "Lista de usuários",
             "content": {
               "application/json" : {
                             
                 "schema" : {
                  "type": "object",
                  "$ref":"#/components/schemas/User"
                }
              }
            }
           }
         }
       },
        "post": {
          "summary": "Cria um usuário",
          "description": "Cria um usuário de acordo com os parâmetros",
          "tags":["User"],
          "produces": [
            "application/json"
          ],
          "parameters": [
           {
             "name": "body",
             "in": "body",
             "description": "User data",
             "required": true,
             "type": "json",
             "schema": {
               "$ref": "#/components/schemas/User"
             }
           }
         ],
          "responses": {
           "400" : {
             "description": "Missing required data",
             "content": {
               "application/json" : {
                 "schema" : {
                   "type": "object",
                   "$ref":"#/components/schemas/Error"
                 }
               }
             }
            }, 

            "403" : {
              "description": "Email already in use",
              "content": {
                "application/json" : {
                  "schema" : {
                    "type": "object",
                    "$ref":"#/components/schemas/Error"
                  }
                }
              }
             },
             "200" : {
               "description": "Successful operation",
               "content": {
                 "application/json" : {
                   "schema" : {
                     "type": "object",
                     "$ref":"#/components/schemas/User"
                   }
                 }
               }
              }
          }
        }
      },
      "/user/{uid}": {
       "get": {
         "summary": "Lista um usuário",
         "description": "Lista um usuário de acordo com seu ID",
         "tags":["User"],
         "parameters": [
           {
             "name": "Authorization",
             "in": "header",
             "required": true,
             "type": "string",
             "description": "Auth token"
           },
           {
             "name": "Uid",
             "description": "ID of user to return",
             "type": "string",
             "in": "path",
             "required": true
           }
         ],
         "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "403" : {
           "description": "Forbidden. User belongs to another restaurant",
           "content": {
            "application/json" : {
              "schema" : {
               "type": "object",
               "$ref":"#/components/schemas/Error"
             }
           }
         }   
        },
        "404" : {
         "description": "User not found",
         "content": {
          "application/json" : {
            "schema" : {
             "type": "object",
             "$ref":"#/components/schemas/Error"
           }
         }
       }   
      },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                  "type": "object",
                  "$ref":"#/components/schemas/User"
                }
              }
            }         
           }
         }
       },
        "put": {
          "summary": "Update user",
          "description": "Update User role or name",
          "tags":["User"],
          "parameters": [
           {
             "name": "Authorization",
             "in": "header",
             "required": true,
             "type": "string",
             "description": "Auth token"
           },
           {
             "name": "Uid",
             "required": true,
             "description": "ID that need to be updated",
             "type": "string",
             "in": "path"
           },
           {
             "name": "User",
             "description": "User data",
             "in": "body",
             "schema": {
               "type": "object",
               "properties": {
                 "name": {
                   "type": "string"
                 },
                 "email": {
                   "type": "string"
                 },
                 "password": {
                   "type": "string"
                 },
                 "role": {
                   "type": "string"
                 }
               }
             }
           }
         ],
          "responses": {
           "400" : {
             "description": "Missing required or new data",
             "content": {
              "application/json" : {
                "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Error"
               }
             }
           }   
          },
           "401" : {
             "description": "User not authorized",
             "content": {
              "application/json" : {
                "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Error"
               }
             }
           }   
          },
          "403" : {
            "description": "Forbidden. User belongs to another restaurant",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "404" : {
          "description": "User not found",
          "content": {
           "application/json" : {
             "schema" : {
              "type": "object",
              "$ref":"#/components/schemas/Error"
            }
          }
        }   
       },
             "200" : {
               "description": "Successful operation",
               "content": {
                 "application/json" : {
                   "schema" : {
                     "type": "object",
                     "$ref":"#/components/schemas/User"
                   }
                 }
               }
              }
          }
        },
        "delete": {
         "summary": "Delete user",
         "description": "Delete user corresponding to the given ID",
         "tags":["User"],
         "parameters": [
           {
             "name": "Authorization",
             "in": "header",
             "required": true,
             "type": "string",
             "description": "Auth token"
           },
           {
             "name": "Uid",
             "required": true,
             "description": "The name that needs to be deleted",
             "type": "string",
             "in": "path"
           }
         ],
         "responses": {
           "401" : {
             "description": "User not authenticated",
             "content": {
              "application/json" : {
                "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Error"
               }
             }
           }   
          },
          "403" : {
            "description": "Forbidden. User belongs to another restaurant",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "404" : {
          "description": "User not found",
          "content": {
           "application/json" : {
             "schema" : {
              "type": "object",
              "$ref":"#/components/schemas/Error"
            }
          }
        }   
       },
            "200" : {
              "description": "Successful operation",
              "content": {
                "application/json" : {
                  "schema" : {
                    "type": "object",
                    "$ref":"#/components/schemas/User"
                  }
                }
              }
             }
         }
       }
      },
      "/product": {
       "get": {
         "summary": "List all products",
         "description": "List of all products",
         "tags":["Product"],
         "requestBody": {
                    },
         "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                  "type": "object",
                  "$ref":"#/components/schemas/Product"
                }
              }
            }         
           }
          }
         }
       },
        
      "/product/{productId}": {
       "get": {
         "summary": "Find product by ID",
         "description": "Returns a single product",
         "tags":["Product"],
         "requestBody": {
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/Product"
               }
             }
           }
         },
         "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "404" : {
          "description": "Not found",
          "content": {
           "application/json" : {
             "schema" : {
              "type": "object",
              "$ref":"#/components/schemas/Error"
            }
          }
        }   
       },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                  "type": "object",
                  "$ref":"#/components/schemas/Product"
                }
              }
            }         
          }
           }
         }
       },
        
      "/order": {
       "get": {
         "summary": "List all orders",
         "description": "List of all orders",
         "tags":["Order"],
         "requestBody": {
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/Order"
               }
             }
           }
         },
         "responses": {
          "401" : {
            "description": "Unauthorized"
           },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                  "type": "object",
                  "$ref":"#/components/schemas/Order"
                }
              }
            }         
           }
         }
       },
       "post": {
        "summary": "Create order",
        "description": "Create a new order",
        "tags":["Order"],
        "parameters": [
         {
           "name": "Authorization",
           "description": "Auth Token",
           "type": "string",
           "in": "header",
           "required":true
         },
         {
           "name": "Body",
           "in": "body",
           "description": "Information about order",
           "required": true,
           "type": "object",
           "schema": {
             "$ref": "#/components/schemas/Order"
           }
         }
       ],
        "responses": {
         "400" : {
           "description": "Missing required data",
           "content": {
             "application/json" : {
               "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Error"
               }
             }
           }
          },
         "401" : {
           "description": "User not authenticated",
           "content": {
             "application/json" : {
               "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Error"
               }
             }
           }
          },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                   "type": "object",
                   "$ref":"#/components/schemas/Orders"
                 }
               }
             }
            }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "summary": "Find order by ID",
        "description": "Returns a single order",
        "tags":["Order"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Auth Token"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of user to return"
          }
        ],
        "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "403" : {
           "description": "Forbidden. User belongs to another restaurant",
           "content": {
            "application/json" : {
              "schema" : {
               "type": "object",
               "$ref":"#/components/schemas/Error"
             }
           }
         }   
        },
        "404" : {
         "description": "User not found",
         "content": {
          "application/json" : {
            "schema" : {
             "type": "object",
             "$ref":"#/components/schemas/Error"
           }
         }
       }   
      },
          "200" : {
            "description": "Successful operation",
            "content": {
              "application/json" : {
                "schema" : {
                 "type": "object",
                 "$ref":"#/components/schemas/Orders"
               }
             }
           }         
          }
        }
      },
      "put": {
        "summary": "Update order status",
        "description": "Update order status corresponding to the given ID",
        "tags":["Order"],
        "parameters": [
         {
           "name": "Authorization ",
           "in": "header",
           "required": true,
           "type": "string",
           "description": "Auth token"
         },
         {
           "name": "orderId",
           "description": "ID that need to be updated",
           "type": "string",
           "in": "path",
           "required": true
         },
         {
           "name": "status",
           "in": "body",
           "description": "The new order status",
           "required": true,
           "type": "object",
           "schema": {
             "type": "object",
               "properties": {
                 "status": {
                   "type": "string",
                 "example": "pending"
                 }
             }
           }
         }
       ],
        "responses": {
         "401" : {
           "description": "User not authenticated",
           "content": {
            "application/json" : {
              "schema" : {
               "type": "object",
               "$ref":"#/components/schemas/Error"
             }
           }
         }   
        },
        "403" : {
          "description": "Forbidden. User belongs to another restaurant",
          "content": {
           "application/json" : {
             "schema" : {
              "type": "object",
              "$ref":"#/components/schemas/Error"
            }
          }
        }   
       },
       "404" : {
        "description": "Order not found",
        "content": {
         "application/json" : {
           "schema" : {
            "type": "object",
            "$ref":"#/components/schemas/Error"
          }
        }
      }   
     },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                   "type": "object",
                   "$ref":"#/components/schemas/Orders"
                 }
               }
             }
            }
        }
      },
      "delete": {
        "summary": "Delete order",
        "description": "Delete order corresponding to the given ID",
        "tags":["Order"],
        "parameters": [
          {
            "name": "Authorization ",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Auth token"
          },
          {
            "name": "orderId",
            "description": "ID that need to be deleted",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "401" : {
            "description": "User not authenticated",
            "content": {
             "application/json" : {
               "schema" : {
                "type": "object",
                "$ref":"#/components/schemas/Error"
              }
            }
          }   
         },
         "403" : {
           "description": "Forbidden. User belongs to another restaurant",
           "content": {
            "application/json" : {
              "schema" : {
               "type": "object",
               "$ref":"#/components/schemas/Error"
             }
           }
         }   
        },
        "404" : {
         "description": "Order not found",
         "content": {
          "application/json" : {
            "schema" : {
             "type": "object",
             "$ref":"#/components/schemas/Error"
           }
         }
       }   
      },
           "200" : {
             "description": "Successful operation",
             "content": {
               "application/json" : {
                 "schema" : {
                   "type": "object",
                   "$ref":"#/components/schemas/Orders"
                 }
               }
             }
            }
        }
      }
     }
   },
   "components": {
     "schemas": {
      "Auth": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "restaurant": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "restaurant": {
            "type": "string"
          }
        }
      },
       "Product": {
         "type": "object",
         "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "flavor": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "sub_type": {
            "type": "string"
          }
         }
       },
       "OrderBody": {
        "type": "object",
        "properties": {
          "client": {
            "type": "string"
          },
          "table": {
            "type": "number"
          },
          "product": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "qtd": {
                  "type": "number"
                }
              }
              
            }
          }
        
        }
        
      },

       "Orders": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "client_name": {
            "type": "string"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "table": {
            "type": "number",
            "format": "int64"
          },
          "processedAt": {
            "type": "string",
            "format": "date"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "products": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                },
                "flavor": {
                  "type": "string"
                },
                "complement": {
                  "type": "string"
                },
                "qtd": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
     }
   }
  }